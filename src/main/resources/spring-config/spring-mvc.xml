<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 开启MVC注解扫描-->
    <context:component-scan base-package="com.maven.Controller"/>

    <!--todo 2.静态资源默认servlet配置:
        1)加入对静态资源的处理
        2）允许使用"/"做整体映射
        3)配合thymeleaf使用，例如：<script th:src="@{/static/vue/js/vue.js}"></script>
        4）因为web.xml配置前端控制器对/的url进行拦截，需要使用<mvc:resources>对静态资源进行url映射
    -->
    <mvc:resources mapping="/static/**" location="WEB-INF/view/static/" />
    <mvc:resources mapping="/bootstraps/**" location="WEB-INF/view/bootstraps/" />

    <!-- 开启Aspect生成代理对象;必须配置在mvc.xml文件，因applicationContext.xml文件优先加载，寻找切入点时无法找到controller-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <mvc:annotation-driven>
        <!-- 处理响应中文内容乱码-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler />

    <!-- 配置拦截器-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

    <!-- 视图解析器 -->
<!--    <bean id="viewResolver"-->
<!--          class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        <property name="prefix" value="/"/>-->
<!--        <property name="suffix" value=".jsp"></property>-->
<!--    </bean>-->

    <!--配置视图解析器ThymeleafView-->
    <!--
        当控制器方法中所设置的视图名称没有任何前缀时，此时的视图名称会被SpringMVC配置文件中所配置的视图解析器解析;
        当控制器方法中所设置的视图名称以"forward:"、"redirect:"为前缀时，创建InternalResourceView视图、RedirectView视图
        并且会将前缀去掉，使用mvc自带视图解析
    -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine" ref="templateEngine"/>
    </bean>
    <!-- templateEngine -->
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5"/>
        <property name="characterEncoding" value="UTF-8" />
    </bean>
    <!-- ThymeleafView配置结束-->


</beans>